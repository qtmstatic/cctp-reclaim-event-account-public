{"version":3,"sources":["./src/styles.scss","./node_modules/@angular/material/core/ripple/_ripple.scss","./node_modules/@angular/cdk/a11y/_index.scss","./node_modules/@angular/cdk/overlay/_index.scss","./node_modules/@angular/cdk/text-field/_index.scss","./node_modules/@angular/material/core/focus-indicators/_private.scss","./node_modules/@angular/material/core/style/_layout-common.scss","./node_modules/@angular/material/core/_core.scss","./node_modules/@material/theme/_css.scss","./node_modules/@angular/material/core/typography/_typography.scss"],"sourcesContent":["/* You can add global styles to this file, and also import other style files */\n\n@use \"@angular/material\" as mat;\n@use \"@angular/material-experimental\" as matx;\n\nhtml,\nbody {\n  height: 100%;\n}\n\nbody {\n  margin: 0;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n@include mat.core();\n\n$light-theme: matx.define-theme(\n  (\n    color: (\n      theme-type: light,\n      primary: matx.$m3-azure-palette,\n      tertiary: matx.$m3-blue-palette,\n    ),\n    density: (\n      scale: 0,\n    ),\n  )\n);\n\n$dark-theme: matx.define-theme(\n  (\n    color: (\n      theme-type: dark,\n      primary: matx.$m3-cyan-palette,\n      tertiary: matx.$m3-orange-palette,\n    ),\n    density: (\n      scale: 0,\n    ),\n  )\n);\n\nhtml {\n  @include mat.all-component-themes($light-theme);\n}\n\n@include mat.typography-hierarchy($light-theme);\n\n@media (prefers-color-scheme: dark) {\n  html {\n    @include mat.all-component-colors($dark-theme);\n  }\n}\n","@use '@angular/cdk';\n@use '../tokens/m2/mat/ripple' as tokens-mat-ripple;\n@use '../tokens/token-utils';\n\n@mixin ripple() {\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\n    // because we don't want all ripple containers to have their own layer since they're used in a\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\n    // text inside the element, but it isn't very well supported yet.\n    &:not(:empty) {\n      transform: translateZ(0);\n    }\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n\n    // We use a 3d transform here in order to avoid an issue in Safari where\n    // the ripples aren't clipped when inside the shadow DOM (see #24028).\n    transform: scale3d(0, 0, 0);\n\n    @include token-utils.use-tokens(\n      tokens-mat-ripple.$prefix, tokens-mat-ripple.get-token-slots()) {\n      // We have to emit a fallback value here, because some internal builds depend on it.\n      background-color: var(#{token-utils.get-token-variable(color)}, rgba(#000, 0.1));\n    }\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include cdk.high-contrast(active, off) {\n      display: none;\n    }\n  }\n}\n","/// Emits a CSS class, `.cdk-visually-hidden`. This class can be applied to an element\n/// to make that element visually hidden while remaining available to assistive technology.\n@mixin a11y-visually-hidden() {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // This works around a Chrome bug that can cause the tab to crash when large amounts of\n    // non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444\n    white-space: nowrap;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n\n    // We need at least one of top/bottom/left/right in order to prevent cases where the\n    // absolute-positioned element is pushed down and can affect scrolling (see #24597).\n    // `left` was chosen here, because it's the least likely to break overrides where the\n    // element might have been positioned (e.g. `mat-checkbox`).\n    left: 0;\n\n    [dir='rtl'] & {\n      left: auto;\n      right: 0;\n    }\n  }\n}\n\n/// @deprecated Use `a11y-visually-hidden`.\n@mixin a11y() {\n  @include a11y-visually-hidden;\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param {String} selector-context The selector under which to nest the mixin's content.\n@mixin _optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param {String} target Type of high contrast setting to target. Defaults to `active`, can be\n///     `white-on-black` or `black-on-white`.\n/// @param {String} encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      // Note that if this selector is updated, the same change has to be made inside\n      // `_overlay.scss` which can't depend on this mixin due to some infrastructure limitations.\n      .cdk-high-contrast-#{$target} {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n","// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$overlay-container-z-index: 1000 !default;\n$overlay-z-index: 1000 !default;\n$overlay-backdrop-z-index: 1000 !default;\n\n// Background color for all of the backdrops\n$overlay-backdrop-color: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n/// Emits structural styles required for cdk/overlay to function.\n@mixin overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $overlay-container-z-index;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $overlay-z-index;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $overlay-z-index;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $overlay-backdrop-z-index;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // Note that we can't import and use the `high-contrast` mixin from `_a11y.scss`, because\n      // this file will be copied to the top-level `cdk` package when putting together the files\n      // for npm. Any relative import paths we use here will become invalid once the file is copied.\n      .cdk-high-contrast-active & {\n        // In high contrast mode the rgba background will become solid\n        // so we need to fall back to making it opaque using `opacity`.\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $overlay-backdrop-color;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Define a transition on the visibility so that the `transitionend` event can fire immediately.\n    transition: visibility 1ms linear, opacity 1ms linear;\n    visibility: hidden;\n    opacity: 1;\n\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n      visibility: visible;\n    }\n  }\n\n  .cdk-overlay-backdrop-noop-animation {\n    transition: none;\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $overlay-z-index;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n","// Structural styles for the autosize text fields.\n@mixin text-field-autosize() {\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    @include _autosize-measuring-base;\n    height: auto !important;\n    overflow: hidden !important;\n  }\n\n  // Similar to the `cdk-textarea-autosize-measuring` class, but only applied on Firefox. We need\n  // to use this class, because Firefox has a bug where changing the `overflow` breaks the user's\n  // ability to undo/redo what they were typing (see #16629). This class is only scoped to Firefox,\n  // because the measurements there don't seem to be affected by the `height: 0`, whereas on other\n  // browsers they are, e.g. Chrome detects longer text and IE does't resize back to normal.\n  // Identical issue report: https://bugzilla.mozilla.org/show_bug.cgi?id=448784\n  textarea.cdk-textarea-autosize-measuring-firefox {\n    @include _autosize-measuring-base;\n    height: 0 !important;\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin text-field-autofill() {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-end 0s 1ms;\n  }\n}\n\n@mixin _autosize-measuring-base {\n  // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n  // measurement. We just have to account for it later and subtract it off the final result.\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation: cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\n    // event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms,\n               cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  $autofill-color-frame-count: $autofill-color-frame-count + 1 !global;\n}\n\n// @deprecated Use `autosize` and `autofill` instead.\n@mixin text-field {\n  @include text-field-autosize();\n  @include text-field-autofill();\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '@angular/cdk';\n@use '../style/layout-common';\n@use '../theming/theming';\n@use '../theming/inspection';\n\n// Private sass variables that will be used as reference throughout component stylesheets.\n$default-border-width: 3px;\n$default-border-style: solid;\n$default-border-color: transparent;\n$default-border-radius: 4px;\n\n// Mixin that renders the focus indicator structural styles.\n@mixin structural-styling($prefix) {\n  .#{$prefix}-focus-indicator {\n    position: relative;\n\n    &::before {\n      @include layout-common.fill();\n      box-sizing: border-box;\n      pointer-events: none;\n      display: var(--#{$prefix}-focus-indicator-display, none); // Hide the indicator by default.\n      border: var(\n          --#{$prefix}-focus-indicator-border-width,\n          #{$default-border-width}\n        )\n        var(\n          --#{$prefix}-focus-indicator-border-style,\n          #{$default-border-style}\n        )\n        var(\n          --#{$prefix}-focus-indicator-border-color,\n          #{$default-border-color}\n        );\n      border-radius: var(\n        --#{$prefix}-focus-indicator-border-radius,\n        #{$default-border-radius}\n      );\n    }\n\n    // By default, render the focus indicator when the focus indicator host element takes focus.\n    // Defining a pseudo element's content will cause it to render.\n    &:focus::before {\n      content: '';\n    }\n  }\n\n  // Enable the indicator in high contrast mode.\n  @include cdk.high-contrast(active, off) {\n    @include customize-focus-indicators((display: block), $prefix);\n  }\n}\n\n// Generates CSS variable declarations from a map.\n@mixin _output-variables($map) {\n  @each $key, $value in $map {\n    @if ($value) {\n      --#{$key}: #{$value};\n    }\n  }\n}\n\n// Mixin that dedups CSS variables for the strong-focus-indicators mixin.\n@mixin customize-focus-indicators($config, $prefix) {\n  $border-style: map.get($config, border-style);\n  $border-width: map.get($config, border-width);\n  $border-radius: map.get($config, border-radius);\n  $border-color: map.get($config, border-color);\n  $display: map.get($config, display);\n  $map: (\n    '#{$prefix}-focus-indicator-border-style': $border-style,\n    '#{$prefix}-focus-indicator-border-width': $border-width,\n    '#{$prefix}-focus-indicator-border-radius': $border-radius,\n    '#{$prefix}-focus-indicator-border-color': $border-color,\n    '#{$prefix}-focus-indicator-display': $display,\n  );\n\n  @if (&) {\n    @include _output-variables($map);\n  }\n  @else {\n    // We use `html` here instead of `:root`, because the\n    // latter causes some issues with internal tooling.\n    html {\n      @include _output-variables($map);\n    }\n  }\n}\n\n@mixin strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n      border-color: black,\n      display: block,\n  );\n\n  // Merge default config with user config.\n  $config: map.merge($default-config, $config);\n\n  @include customize-focus-indicators($config, 'mat');\n}\n\n@mixin mdc-strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n      border-color: black,\n      display: block,\n  );\n\n  // Merge default config with user config.\n  $config: map.merge($default-config, $config);\n\n  @include customize-focus-indicators($config, 'mat-mdc');\n}\n\n@mixin strong-focus-indicators-color($theme-or-color) {\n  @if meta.type-of($theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color\n    ), 'mat');\n  }\n  @else {\n    $border-color: inspection.get-theme-color($theme-or-color, primary);\n    @include customize-focus-indicators((\n        border-color: $border-color\n    ), 'mat');\n  }\n}\n\n@mixin strong-focus-indicators-theme($theme-or-color) {\n  @if meta.type-of($theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color\n    ), 'mat');\n  }\n  @else {\n    @include theming.private-check-duplicate-theme-styles($theme-or-color, 'mat-focus-indicators') {\n      @if inspection.theme-has($theme-or-color, color) {\n        @include strong-focus-indicators-color($theme-or-color);\n      }\n    }\n  }\n}\n\n@mixin mdc-strong-focus-indicators-color($theme-or-color) {\n  @if meta.type-of($theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color\n    ), 'mat-mdc');\n  }\n  @else {\n    $border-color: inspection.get-theme-color($theme-or-color, primary);\n    @include customize-focus-indicators((\n        border-color: $border-color\n    ), 'mat-mdc');\n  }\n}\n\n@mixin mdc-strong-focus-indicators-theme($theme-or-color) {\n  @if meta.type-of($theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color\n    ), 'mat-mdc');\n  }\n  @else {\n    @include theming.private-check-duplicate-theme-styles(\n        $theme-or-color, 'mat-mdc-focus-indicators') {\n      @if inspection.theme-has($theme-or-color, color) {\n        @include mdc-strong-focus-indicators-color($theme-or-color);\n      }\n    }\n  }\n}\n","// This mixin ensures an element spans to fill the nearest ancestor with defined positioning.\n@mixin fill {\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n}\n","@use '@angular/cdk';\n@use './tokens/m2/mat/app' as tokens-mat-app;\n@use './tokens/token-utils';\n@use './ripple/ripple';\n@use './focus-indicators/private';\n@use './mdc-helpers/mdc-helpers';\n\n// Mixin that renders all of the core styles that are not theme-dependent.\n@mixin core() {\n  @include ripple.ripple();\n  @include cdk.a11y-visually-hidden();\n  @include cdk.overlay();\n  @include cdk.text-field-autosize();\n  @include cdk.text-field-autofill();\n  @include private.structural-styling('mat');\n  @include private.structural-styling('mat-mdc');\n\n  // Wrapper element that provides the theme background when the\n  // user's content isn't inside of a `mat-sidenav-container`.\n  @at-root {\n    .mat-app-background {\n      @include mdc-helpers.disable-mdc-fallback-declarations {\n        @include token-utils.use-tokens(tokens-mat-app.$prefix, tokens-mat-app.get-token-slots()) {\n          // Note: we need to emit fallback values here to avoid errors in internal builds.\n          @include token-utils.create-token-slot(background-color, background-color, transparent);\n          @include token-utils.create-token-slot(color, text-color, inherit);\n        }\n      }\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'sass:string';\n@use 'typography-utils';\n@use '../theming/inspection';\n@use './versioning';\n\n// Definition and versioning functions live in their own files to avoid circular dependencies, but\n// we re-export them here so that historical imports from this file continue to work without needing\n// to be updated.\n@forward './definition';\n@forward './versioning';\n\n@mixin typography-hierarchy($theme, $selector: '.mat-typography', $back-compat: false) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _m3-typography-hierarchy($theme, $selector, $back-compat);\n  }\n  @else {\n    @include _m2-typography-hierarchy($theme, $selector);\n  }\n}\n\n@function _get-selector($selectors, $prefix) {\n  $result: ();\n  @each $selector in $selectors {\n    // Don't add \"naked\" tag selectors, and don't nest prefix selector.\n    @if string.index($selector, '.') == 1 {\n      $result: list.append($result, $selector, $separator: comma);\n    }\n    // Don't nest the prefix selector in itself.\n    @if $selector != $prefix {\n      $result: list.append($result, '#{$prefix} #{$selector}', $separator: comma);\n    }\n  }\n  @return $result;\n}\n\n@mixin _m3-typography-level($theme, $selector-prefix, $level, $selectors, $margin: null) {\n  #{_get-selector($selectors, $selector-prefix)} {\n    // TODO(mmalerba): When we expose system tokens as CSS vars, we should change this to emit token\n    //  slots.\n    font: inspection.get-theme-typography($theme, $level, font);\n    letter-spacing: inspection.get-theme-typography($theme, $level, letter-spacing);\n    @if $margin != null {\n      margin: 0 0 $margin;\n    }\n  }\n}\n\n@mixin _m3-typography-hierarchy($theme, $selector-prefix, $add-m2-selectors) {\n $levels: (\n   display-large: (\n     selectors: ('.mat-display-large', 'h1'),\n     m2-selectors: ('.mat-h1', '.mat-headline-1'),\n     margin: 0.5em\n   ),\n   display-medium: (\n     selectors: ('.mat-display-medium', 'h2'),\n     m2-selectors: ('.mat-h2', '.mat-headline-2'),\n     margin: 0.5em\n   ),\n   display-small: (\n     selectors: ('.mat-display-small', 'h3'),\n     m2-selectors: ('.mat-h3', '.mat-headline-3'),\n     margin: 0.5em\n   ),\n   headline-large: (\n     selectors: ('.mat-headline-large', 'h4'),\n     m2-selectors: ('.mat-h4', '.mat-headline-4'),\n     margin: 0.5em\n   ),\n   headline-medium: (\n     selectors: ('.mat-headline-medium', 'h5'),\n     m2-selectors: ('.mat-h5', '.mat-headline-5'),\n     margin: 0.5em\n   ),\n   headline-small: (\n     selectors: ('.mat-headline-small', 'h6'),\n     m2-selectors: ('.mat-h6', '.mat-headline-6'),\n     margin: 0.5em\n   ),\n   title-large: (\n     selectors: ('.mat-title-large'),\n     m2-selectors: ('.mat-subtitle-1'),\n   ),\n   title-medium: (\n     selectors: ('.mat-title-medium'),\n     m2-selectors: ('.mat-subtitle-2'),\n   ),\n   title-small: (\n     selectors: ('.mat-title-small')\n   ),\n   body-large: (\n     selectors: ('.mat-body-large', $selector-prefix),\n     m2-selectors: ('.mat-body', '.mat-body-strong', '.mat-body-2'),\n   ),\n   body-medium: (\n     selectors: ('.mat-body-medium')\n   ),\n   body-small: (\n     selectors: ('.mat-body-small')\n   ),\n   label-large: (\n     selectors: ('.mat-label-large')\n   ),\n   label-medium: (\n     selectors: ('.mat-label-medium')\n   ),\n   label-small: (\n     selectors: ('.mat-label-small'),\n     m2-selectors: ('.mat-small', '.mat-caption')\n   ),\n );\n\n  @each $level, $options in $levels {\n    @if $add-m2-selectors {\n      $options: map.set($options, selectors,\n          list.join(map.get($options, selectors), map.get($options, m2-selectors) or ()));\n    }\n    $options: map.remove($options, m2-selectors);\n\n    // Apply styles for the level.\n    @include _m3-typography-level($theme, $selector-prefix, $level, $options...);\n\n    // Also style <p> inside body-large.\n    @if $level == body-large {\n      #{_get-selector(map.get($options, selectors), $selector-prefix)} {\n        p {\n          margin: 0 0 0.75em;\n        }\n      }\n    }\n  }\n}\n\n/// Emits baseline typographic styles based on a given config.\n/// @param {Map} $config-or-theme A typography config for an entire theme.\n/// @param {String} $selector Ancestor selector under which native elements, such as h1, will\n///     be styled.\n@mixin _m2-typography-hierarchy($theme, $selector) {\n  // Note that it seems redundant to prefix the class rules with the `$selector`, however it's\n  // necessary if we want to allow people to overwrite the tag selectors. This is due to\n  // selectors like `#{$selector} h1` being more specific than ones like `.mat-title`.\n  .mat-h1,\n  .mat-headline-5,\n  #{$selector} .mat-h1,\n  #{$selector} .mat-headline-5,\n  #{$selector} h1 {\n    font: inspection.get-theme-typography($theme, headline-5, font);\n    letter-spacing: inspection.get-theme-typography($theme, headline-5, letter-spacing);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2,\n  .mat-headline-6,\n  #{$selector} .mat-h2,\n  #{$selector} .mat-headline-6,\n  #{$selector} h2 {\n    font: inspection.get-theme-typography($theme, headline-6, font);\n    letter-spacing: inspection.get-theme-typography($theme, headline-6, letter-spacing);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3,\n  .mat-subtitle-1,\n  #{$selector} .mat-h3,\n  #{$selector} .mat-subtitle-1,\n  #{$selector} h3 {\n    font: inspection.get-theme-typography($theme, subtitle-1, font);\n    letter-spacing: inspection.get-theme-typography($theme, subtitle-1, letter-spacing);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4,\n  .mat-body-1,\n  #{$selector} .mat-h4,\n  #{$selector} .mat-body-1,\n  #{$selector} h4 {\n    font: inspection.get-theme-typography($theme, body-1, font);\n    letter-spacing: inspection.get-theme-typography($theme, body-1, letter-spacing);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5,\n  #{$selector} .mat-h5,\n  #{$selector} h5 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{inspection.get-theme-typography($theme, body-2, font-size)} * 0.83),\n      inspection.get-theme-typography($theme, body-2, font-weight),\n      inspection.get-theme-typography($theme, body-2, line-height),\n      inspection.get-theme-typography($theme, body-2, font-family)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6,\n  #{$selector} .mat-h6,\n  #{$selector} h6 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{inspection.get-theme-typography($theme, body-2, font-size)} * 0.67),\n      inspection.get-theme-typography($theme, body-2, font-weight),\n      inspection.get-theme-typography($theme, body-2, line-height),\n      inspection.get-theme-typography($theme, body-2, font-family)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong,\n  .mat-subtitle-2,\n  #{$selector} .mat-body-strong,\n  #{$selector} .mat-subtitle-2 {\n    font: inspection.get-theme-typography($theme, subtitle-2, font);\n    letter-spacing: inspection.get-theme-typography($theme, subtitle-2, letter-spacing);\n  }\n\n  .mat-body,\n  .mat-body-2,\n  #{$selector} .mat-body,\n  #{$selector} .mat-body-2,\n  #{$selector} {\n    font: inspection.get-theme-typography($theme, body-2, font);\n    letter-spacing: inspection.get-theme-typography($theme, body-2, letter-spacing);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small,\n  .mat-caption,\n  #{$selector} .mat-small,\n  #{$selector} .mat-caption {\n    font: inspection.get-theme-typography($theme, caption, font);\n    letter-spacing: inspection.get-theme-typography($theme, caption, letter-spacing);\n  }\n\n  .mat-headline-1,\n  #{$selector} .mat-headline-1 {\n    font: inspection.get-theme-typography($theme, headline-1, font);\n    letter-spacing: inspection.get-theme-typography($theme, headline-1, letter-spacing);\n    margin: 0 0 56px;\n  }\n\n  .mat-headline-2,\n  #{$selector} .mat-headline-2 {\n    font: inspection.get-theme-typography($theme, headline-2, font);\n    letter-spacing: inspection.get-theme-typography($theme, headline-2, letter-spacing);\n    margin: 0 0 64px;\n  }\n\n  .mat-headline-3,\n  #{$selector} .mat-headline-3 {\n    font: inspection.get-theme-typography($theme, headline-3, font);\n    letter-spacing: inspection.get-theme-typography($theme, headline-3, letter-spacing);\n    margin: 0 0 64px;\n  }\n\n  .mat-headline-4,\n  #{$selector} .mat-headline-4 {\n    font: inspection.get-theme-typography($theme, headline-4, font);\n    letter-spacing: inspection.get-theme-typography($theme, headline-4, letter-spacing);\n    margin: 0 0 64px;\n  }\n}\n"],"mappings":"AAKA,UAEE,OAAA,IAHF,CAMA,KAVA,OAWE,EACA,YAAA,MAAA,CAAA,cAAA,CAAA,UAHF,CCFE,CAAA,WACE,SAAA,OAIA,SAAA,QDEJ,CCKI,CAZF,UAYE,KAAA,QACE,UAAA,WAAA,EDHN,CCOE,CAjBA,UAiBA,CAAA,qBACE,SAAA,ODJJ,CCOE,CAAA,mBACE,SAAA,SD7BJ,cC8BI,IACA,eAAA,KAEA,WAAA,OAAA,CAAA,UAAA,IAAA,aAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,GAIA,UAAA,QAAA,CAAA,CAAA,CAAA,CAAA,GAKE,iBAAA,IAAA,kBAAA,EAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IDZN,CEoBI,CAAA,yBAAA,CDtBF,mBAmBI,QAAA,IDdN,CE9BE,CAAA,oBACE,OAAA,EACA,KAAA,KAAA,EAAA,EAAA,EAAA,GACA,OAAA,IFNJ,OEOI,KACA,SAAA,OFRJ,QESI,EACA,SAAA,SACA,MAAA,IAIA,YAAA,OAGA,QAAA,EAGA,mBAAA,KACA,gBAAA,KAMA,KAAA,CFqBJ,CEnBI,CAAA,SAAA,CA3BF,oBA4BI,KAAA,KACA,MAAA,CFqBN,CGrCE,CAAA,sBAAA,CAAA,2BAEE,eAAA,KAGA,IAAA,EACA,KAAA,EACA,OAAA,KACA,MAAA,IHqCJ,CGjCE,CAZA,sBAaE,SAAA,MACA,QAAA,IHoCJ,CGlCI,CAhBF,qBAgBE,OAGE,QAAA,IHkCN,CG1BE,CA3BA,2BA4BE,QAAA,KACA,SAAA,SACA,QAAA,IH6BJ,CGzBE,CAAA,iBAGE,SAAA,SACA,eAAA,KACA,WAAA,WACA,QAAA,KAIA,QAAA,KACA,UAAA,KACA,WAAA,IHuBJ,CGpBE,CAAA,qBAEE,SAAA,SACA,MAAA,EAKA,QAAA,KACA,eAAA,KACA,4BAAA,YACA,WAAA,QAAA,IAAA,aAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,GACA,QAAA,CHqBJ,CGnBI,CAdF,oBAcE,CAAA,6BACE,QAAA,CHqBN,CGhBM,CDnCF,yBCmCE,CApBJ,oBAoBI,CANF,6BASI,QAAA,EHgBR,CGXE,CAAA,0BACE,WAAA,SHcJ,CGXE,CAAA,iCAEE,WAAA,WAAA,IAAA,MAAA,CAAA,QAAA,IAAA,OACA,WAAA,OACA,QAAA,CHaJ,CGPI,CAVF,gCAUE,CA5BA,6BA6BE,QAAA,EACA,WAAA,OHSN,CGLE,CAAA,oCACE,WAAA,IHQJ,CGHE,CAAA,4CACE,SAAA,SACA,QAAA,KAKA,QAAA,KAIA,eAAA,OAGA,UAAA,IACA,WAAA,GHHJ,CGOE,CAAA,uBACE,SAAA,MAKA,MAAA,KAKA,WAAA,MHZJ,CIrIE,QAAA,CAAA,sBACE,OAAA,IJwIJ,CIlIE,QAAA,CAAA,gCJXF,QIoDE,IAAA,YACA,WAAA,sBAxCE,OAAA,eACA,SAAA,gBJsIJ,CI7HE,QAAA,CAAA,wCJvBF,QIoDE,IAAA,YACA,WAAA,sBA5BE,OAAA,WJiIJ,CIvHE,WAAA,8BAAA,CACA,WAAA,4BAAA,CAEA,CAAA,iCAAA,kBAEE,UAAA,8BAAA,GAAA,GJwHJ,CIrHE,CALA,iCAKA,KAAA,mBAEE,UAAA,4BAAA,GAAA,GJuHJ,CKrJE,CAAA,oBACE,SAAA,QLwJJ,CKtJI,CAHF,mBAGE,QChBF,MAAA,EAIA,SAAA,SDcI,WAAA,WACA,eAAA,KACA,QAAA,IAAA,6BAAA,EAAA,MACA,OAAA,IAAA,kCAAA,EAAA,KAAA,IAAA,kCAAA,EAAA,OAAA,IAAA,kCAAA,EAAA,aAYA,cAAA,IAAA,mCAAA,EAAA,ILiJN,CKzII,CA5BF,mBA4BE,MAAA,QACE,QAAA,EL2IN,CEjGM,CApCF,yBGQE,+BAAA,KLiIN,CK5KE,CAAA,wBACE,SAAA,QL+KJ,CK7KI,CAHF,uBAGE,QChBF,MAAA,EAIA,SAAA,SDcI,WAAA,WACA,eAAA,KACA,QAAA,IAAA,iCAAA,EAAA,MACA,OAAA,IAAA,sCAAA,EAAA,KAAA,IAAA,sCAAA,EAAA,OAAA,IAAA,sCAAA,EAAA,aAYA,cAAA,IAAA,uCAAA,EAAA,ILwKN,CKhKI,CA5BF,uBA4BE,MAAA,QACE,QAAA,ELkKN,CExHM,CApCF,yBGQE,mCAAA,KLwJN,CO9LI,CAAA,mBC0DA,iBAAA,IAAA,0BAAA,EAAA,aAAA,MAAA,IAAA,oBAAA,EAAA,QRyIJ,CA5KA,KQmCI,4BAAA,QAAA,sBAAA,QAAA,oBAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,8CAAA,QAAA,+BAAA,QAAA,sCAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,sCAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,yCAAA,QAAA,8BAAA,MAAA,EAAA,WAAA,qCAAA,QAAA,8BAAA,KAAA,kCAAA,QAAA,gCAAA,IAAA,gDAAA,QAAA,qDAAA,QAAA,kDAAA,QAAA,8DAAA,QAAA,2DAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,yDAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,wDAAA,QAAA,iEAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,qCAAA,QAAA,yCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,KAAA,qCAAA,QAAA,mCAAA,QAAA,yCAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,KAAA,mCAAA,IAAA,gCAAA,QAAA,4BAAA,MAAA,EAAA,WAAA,mCAAA,QAAA,4BAAA,SAAA,gCAAA,KAAA,8BAAA,IAAA,+BAAA,MAAA,EAAA,WAAA,sCAAA,OAAA,+BAAA,KAAA,mCAAA,QAAA,iCAAA,IAAA,8CAAA,QAAA,mCAAA,QAAA,+CAAA,IAAA,oCAAA,IAAA,mCAAA,IAAA,qCAAA,QAAA,2CAAA,QAAA,iDAAA,KAAA,0CAAA,MAAA,EAAA,WAAA,0CAAA,OAAA,4CAAA,IAAA,8CAAA,QAAA,qCAAA,IAAA,qCAAA,QAAA,sDAAA,QAAA,gDAAA,QAAA,yCAAA,QAAA,kDAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,0CAAA,QAAA,gDAAA,QAAA,mDAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,0CAAA,QAAA,mDAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,sDAAA,QAAA,sDAAA,QAAA,sDAAA,QAAA,gDAAA,QAAA,gDAAA,QAAA,yDAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,sDAAA,QAAA,sDAAA,QAAA,4DAAA,QAAA,4DAAA,QAAA,yCAAA,MAAA,EAAA,WAAA,yCAAA,KAAA,6CAAA,QAAA,2CAAA,IAAA,iDAAA,IAAA,uDAAA,IAAA,yCAAA,IAAA,uCAAA,QAAA,+CAAA,QAAA,kDAAA,QAAA,4CAAA,QAAA,kDAAA,QAAA,qDAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,4CAAA,QAAA,qDAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,wDAAA,QAAA,wDAAA,QAAA,kDAAA,QAAA,wDAAA,QAAA,yCAAA,QAAA,kDAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,+CAAA,QAAA,qDAAA,QAAA,qDAAA,QAAA,+CAAA,QAAA,2CAAA,MAAA,EAAA,WAAA,2CAAA,KAAA,+CAAA,QAAA,6CAAA,IAAA,yCAAA,IAAA,+CAAA,IAAA,2CAAA,IAAA,2CAAA,QAAA,wDAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,oCAAA,QAAA,mCAAA,QAAA,2CAAA,QAAA,oDAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,qCAAA,QAAA,8CAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,sCAAA,QAAA,+CAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,kDAAA,QAAA,kDAAA,QAAA,4CAAA,QAAA,6CAAA,QAAA,8CAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,4CAAA,IAAA,sCAAA,MAAA,EAAA,WAAA,6CAAA,OAAA,sCAAA,KAAA,0CAAA,QAAA,wCAAA,IAAA,sCAAA,MAAA,EAAA,WAAA,6CAAA,KAAA,sCAAA,OAAA,0CAAA,QAAA,wCAAA,IAAA,mCAAA,KAAA,uCAAA,MAAA,6CAAA,KAAA,0DAAA,KAAA,6DAAA,IAAA,4CAAA,EAAA,qCAAA,QAAA,yCAAA,QAAA,0CAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,qCAAA,QAAA,kCAAA,QAAA,mCAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,kCAAA,QAAA,kCAAA,QAAA,gCAAA,MAAA,EAAA,WAAA,uCAAA,OAAA,gCAAA,KAAA,oCAAA,QAAA,kCAAA,IAAA,8BAAA,WAAA,MAAA,yCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,QAAA,oCAAA,IAAA,+CAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,yCAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,KAAA,8BAAA,QAAA,4BAAA,QAAA,oCAAA,QAAA,2BAAA,MAAA,EAAA,WAAA,kCAAA,KAAA,2BAAA,OAAA,6BAAA,IAAA,+BAAA,KAAA,mCAAA,MAAA,EAAA,WAAA,0CAAA,QAAA,mCAAA,QAAA,qCAAA,IAAA,uCAAA,QAAA,8BAAA,KAAA,kCAAA,MAAA,wCAAA,KAAA,MAAA,EAAA,OAAA,kCAAA,MAAA,gCAAA,SAAA,8BAAA,KAAA,KAAA,8BAAA,KAAA,KAAA,2CAAA,KAAA,KAAA,EAAA,+BAAA,IAAA,KAAA,KAAA,0BAAA,QAAA,mCAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,gCAAA,QAAA,sCAAA,IAAA,+CAAA,IAAA,sCAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,8CAAA,QAAA,mDAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,oCAAA,QAAA,oCAAA,QAAA,6CAAA,QAAA,sCAAA,IAAA,6CAAA,QAAA,+CAAA,IAAA,6BAAA,QAAA,sCAAA,QAAA,iCAAA,QAAA,0CAAA,QAAA,0CAAA,QAAA,4DAAA,QAAA,mDAAA,QAAA,4BAAA,MAAA,EAAA,WAAA,mCAAA,QAAA,4BAAA,QAAA,gCAAA,QAAA,8BAAA,IAAA,6BAAA,KAAA,mCAAA,QAAA,mCAAA,IAAA,oCAAA,KAAA,gCAAA,KAAA,0BAAA,IAAA,gDAAA,IAAA,wCAAA,EAAA,8DAAA,IAAA,4CAAA,IAAA,8CAAA,QAAA,uDAAA,QAAA,sDAAA,IAAA,sDAAA,IAAA,kDAAA,QAAA,yCAAA,QAAA,uCAAA,EAAA,oCAAA,EAAA,0CAAA,EAAA,iDAAA,IAAA,iDAAA,IAAA,mDAAA,IAAA,mDAAA,IAAA,mDAAA,IAAA,qDAAA,IAAA,+CAAA,QAAA,oCAAA,QAAA,+CAAA,QAAA,iDAAA,QAAA,0CAAA,QAAA,0CAAA,QAAA,4CAAA,QAAA,yCAAA,QAAA,yCAAA,QAAA,2CAAA,QAAA,mCAAA,QAAA,6CAAA,QAAA,2CAAA,QAAA,4CAAA,QAAA,+CAAA,QAAA,6CAAA,QAAA,8CAAA,QAAA,kCAAA,QAAA,4CAAA,QAAA,iDAAA,QAAA,2CAAA,QAAA,sCAAA,QAAA,4CAAA,QAAA,iDAAA,QAAA,2CAAA,QAAA,oCAAA,QAAA,8CAAA,QAAA,mDAAA,QAAA,6CAAA,QAAA,qCAAA,QAAA,6CAAA,IAAA,qCAAA,IAAA,+CAAA,IAAA,2BAAA,OAAA,iCAAA,KAAA,2BAAA,KAAA,0BAAA,OAAA,0BAAA,KAAA,mCAAA,KAAA,+BAAA,KAAA,kCAAA,QAAA,sDAAA,QAAA,+CAAA,EAAA,iDAAA,IAAA,qCAAA,KAAA,mCAAA,KAAA,kCAAA,KAAA,oCAAA,KAAA,gDAAA,EAAA,KAAA,0DAAA,EAAA,KAAA,wDAAA,EAAA,KAAA,kDAAA,EAAA,IAAA,4DAAA,EAAA,IAAA,0DAAA,EAAA,IAAA,oCAAA,EAAA,mCAAA,EAAA,uCAAA,QAAA,KAAA,sCAAA,QAAA,KAAA,kCAAA,IAAA,2CAAA,EAAA,sDAAA,IAAA,0CAAA,QAAA,4CAAA,QAAA,yCAAA,QAAA,mCAAA,QAAA,2CAAA,QAAA,uCAAA,QAAA,uCAAA,QAAA,iCAAA,QAAA,yCAAA,QAAA,8BAAA,KAAA,4CAAA,IAAA,8CAAA,IAAA,0BAAA,QAAA,kCAAA,QAAA,kCAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,kCAAA,MAAA,2BAAA,QAAA,iCAAA,QAAA,iCAAA,QAAA,iCAAA,QAAA,mCAAA,QAAA,uDAAA,QAAA,qDAAA,QAAA,0CAAA,QAAA,oCAAA,QAAA,4CAAA,QAAA,oCAAA,QAAA,qCAAA,QAAA,gDAAA,QAAA,uDAAA,QAAA,+BAAA,EAAA,kCAAA,QAAA,oCAAA,MAAA,EAAA,WAAA,oCAAA,OAAA,2CAAA,KAAA,wCAAA,QAAA,sCAAA,IAAA,kCAAA,IAAA,iCAAA,OAAA,4BAAA,KAAA,2BAAA,OAAA,2BAAA,KAAA,oCAAA,IAAA,mCAAA,OAAA,gDAAA,IAAA,uDAAA,IAAA,8CAAA,OAAA,6CAAA,IAAA,yDAAA,IAAA,2BAAA,QAAA,sCAAA,KAAA,CAAA,EAAA,EAAA,EAAA,GAAA,EAAA,KAAA,sCAAA,KAAA,CAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,oCAAA,KAAA,qCAAA,KAAA,4CAAA,KAAA,4CAAA,IAAA,IAAA,IAAA,EAAA,sCAAA,EAAA,6CAAA,OAAA,OAAA,kDAAA,WAAA,MAAA,OAAA,QAAA,sCAAA,EAAA,kCAAA,QAAA,4BAAA,QAAA,yCAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,yCAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,4BAAA,QAAA,0BAAA,QAAA,iCAAA,MAAA,EAAA,WAAA,iCAAA,QAAA,qCAAA,QAAA,wCAAA,QAAA,mCAAA,IAAA,4BAAA,IAAA,mCAAA,IAAA,gCAAA,IAAA,yBAAA,KAAA,2BAAA,KAAA,iCAAA,KAAA,kCAAA,KAAA,2CAAA,KAAA,4CAAA,KAAA,sCAAA,YAAA,2CAAA,QAAA,iDAAA,QAAA,mDAAA,IAAA,uCAAA,QAAA,4CAAA,QAAA,yCAAA,QAAA,qDAAA,QAAA,0CAAA,QAAA,mDAAA,QAAA,gDAAA,QAAA,kDAAA,QAAA,mDAAA,QAAA,6CAAA,QAAA,6CAAA,QAAA,8CAAA,QAAA,gDAAA,IAAA,8CAAA,QAAA,gDAAA,IAAA,sCAAA,MAAA,EAAA,WAAA,6CAAA,OAAA,sCAAA,KAAA,0CAAA,QAAA,wCAAA,IAAA,2CAAA,MAAA,EAAA,WAAA,kDAAA,QAAA,2CAAA,QAAA,+CAAA,QAAA,6CAAA,IAAA,oDAAA,MAAA,EAAA,WAAA,2DAAA,KAAA,oDAAA,QAAA,wDAAA,QAAA,sDAAA,IAAA,gDAAA,KAAA,gDAAA,KAAA,kDAAA,KAAA,sCAAA,IAAA,2CAAA,OAAA,wCAAA,KAAA,0CAAA,KAAA,yCAAA,KAAA,kDAAA,GAAA,oDAAA,IAAA,qDAAA,IAAA,mCAAA,QAAA,+CAAA,KAAA,6CAAA,KAAA,mCAAA,OAAA,sCAAA,QAAA,4CAAA,QAAA,oCAAA,QAAA,qCAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,qCAAA,MAAA,EAAA,WAAA,4CAAA,KAAA,qCAAA,OAAA,yCAAA,QAAA,uCAAA,IAAA,0CAAA,OAAA,gCAAA,KAAA,6CAAA,KAAA,uDAAA,IAAA,iDAAA,KAAA,4CAAA,QAAA,6CAAA,IAAA,4CAAA,EAAA,gCAAA,QAAA,wCAAA,QAAA,4CAAA,QAAA,0CAAA,QAAA,sCAAA,QAAA,wCAAA,QAAA,kDAAA,QAAA,kDAAA,QAAA,gDAAA,QAAA,gDAAA,QAAA,+CAAA,QAAA,+CAAA,QAAA,kCAAA,MAAA,EAAA,WAAA,kCAAA,QAAA,sCAAA,QAAA,yCAAA,QAAA,oCAAA,IAAA,iCAAA,IAAA,kDAAA,QAAA,mDAAA,IAAA,mDAAA,IAAA,qDAAA,IAAA,qDAAA,IAAA,qDAAA,IAAA,uDAAA,IAAA,6CAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,+CAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,yCAAA,QAAA,0CAAA,QAAA,0CAAA,QAAA,oCAAA,QAAA,4CAAA,QAAA,4CAAA,QAAA,4CAAA,QAAA,sCAAA,QAAA,8CAAA,QAAA,iDAAA,QAAA,iDAAA,QAAA,mDAAA,QAAA,mDAAA,QAAA,mDAAA,QAAA,qDAAA,QAAA,iCAAA,KAAA,mCAAA,QAAA,kCAAA,MAAA,EAAA,WAAA,yCAAA,QAAA,kCAAA,QAAA,sCAAA,QAAA,oCAAA,IAAA,qCAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,qCAAA,MAAA,oCAAA,QAAA,6CAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,mCAAA,MAAA,EAAA,WAAA,mCAAA,QAAA,uCAAA,QAAA,qCAAA,IAAA,oCAAA,KAAA,mCAAA,OAAA,wCAAA,QAAA,yCAAA,QAAA,iDAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,kDAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,mDAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,4DAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,yDAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,yDAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,2DAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,+CAAA,QAAA,wCAAA,MAAA,EAAA,WAAA,wCAAA,QAAA,4CAAA,QAAA,0CAAA,IAAA,yCAAA,KAAA,wCAAA,OAAA,qCAAA,QAAA,sCAAA,QAAA,8CAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,+CAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,qCAAA,MAAA,EAAA,WAAA,qCAAA,QAAA,yCAAA,QAAA,uCAAA,IAAA,sCAAA,KAAA,qCAAA,OAAA,8CAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,iDAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,wCAAA,QAAA,qCAAA,QAAA,uCAAA,MAAA,EAAA,WAAA,uCAAA,QAAA,2CAAA,QAAA,yCAAA,IAAA,wCAAA,KAAA,qCAAA,IAAA,uCAAA,OAAA,qCAAA,QAAA,8CAAA,QAAA,gCAAA,KAAA,CAAA,EAAA,EAAA,EAAA,GAAA,EAAA,KAAA,6CAAA,IAAA,6CAAA,IAAA,+CAAA,IAAA,wCAAA,MAAA,sCAAA,KAAA,gDAAA,KAAA,gCAAA,IAAA,+BAAA,KAAA,0CAAA,QAAA,mDAAA,QAAA,qCAAA,KAAA,CAAA,EAAA,EAAA,EAAA,GAAA,EAAA,KAAA,kDAAA,IAAA,kDAAA,IAAA,oDAAA,IAAA,6CAAA,MAAA,2CAAA,KAAA,qCAAA,IAAA,oCAAA,KAAA,uCAAA,QAAA,gDAAA,QAAA,kCAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,+CAAA,IAAA,+CAAA,IAAA,iDAAA,IAAA,0CAAA,MAAA,wCAAA,KAAA,kCAAA,IAAA,iCAAA,KAAA,yCAAA,QAAA,kDAAA,QAAA,oCAAA,KAAA,CAAA,EAAA,EAAA,EAAA,GAAA,EAAA,KAAA,iDAAA,IAAA,iDAAA,IAAA,mDAAA,IAAA,4CAAA,MAAA,0CAAA,KAAA,oCAAA,IAAA,mCAAA,KAAA,8BAAA,QAAA,uCAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,oCAAA,KAAA,6BAAA,KAAA,qCAAA,QAAA,8CAAA,QAAA,gCAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,6CAAA,IAAA,6CAAA,IAAA,+CAAA,IAAA,wCAAA,MAAA,+CAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qDAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qDAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,uDAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,2CAAA,QAAA,oCAAA,MAAA,EAAA,WAAA,oCAAA,QAAA,wCAAA,QAAA,sCAAA,IAAA,qCAAA,KAAA,oCAAA,KAAA,2BAAA,QAAA,sCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,4CAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,4CAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,8CAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,kCAAA,QAAA,2BAAA,KAAA,qBAAA,KAAA,iCAAA,QAAA,4CAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,kDAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,kDAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,oDAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,wCAAA,QAAA,iCAAA,KAAA,2BAAA,KAAA,4BAAA,QAAA,6BAAA,QAAA,wBAAA,KAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,qCAAA,IAAA,qCAAA,IAAA,uCAAA,IAAA,0CAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,2CAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,gCAAA,MAAA,kCAAA,QAAA,mCAAA,QAAA,8BAAA,KAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,2CAAA,IAAA,2CAAA,IAAA,6CAAA,IAAA,gDAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,iDAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,gCAAA,QAAA,sCAAA,QAAA,qCAAA,MAAA,EAAA,WAAA,4CAAA,QAAA,qCAAA,QAAA,uCAAA,IAAA,gCAAA,IAAA,8BAAA,QAAA,8BAAA,QAAA,mCAAA,QAAA,uCAAA,QAAA,oCAAA,QAAA,kCAAA,MAAA,EAAA,WAAA,yCAAA,QAAA,kCAAA,QAAA,oCAAA,IAAA,sCAAA,QAAA,sCAAA,MAAA,EAAA,WAAA,6CAAA,QAAA,sCAAA,QAAA,wCAAA,IAAA,0CAAA,QAAA,yCAAA,MAAA,EAAA,WAAA,gDAAA,QAAA,yCAAA,QAAA,2CAAA,IAAA,6CAAA,QAAA,qCAAA,KAAA,qCAAA,KAAA,uCAAA,KAAA,oCAAA,IAAA,gDAAA,QAAA,gDAAA,IAAA,8BAAA,KAAA,8BAAA,QAAA,wBAAA,QAAA,6CAAA,KAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,uCAAA,QAAA,uBAAA,MAAA,EAAA,WAAA,uBAAA,QAAA,yBAAA,IAAA,kCAAA,QAAA,6BAAA,OAAA,4BAAA,KAAA,uCAAA,IAAA,uCAAA,KAAA,mCAAA,MAAA,8CAAA,MAAA,8CAAA,MAAA,8BAAA,MAAA,EAAA,yCAAA,KAAA,EAAA,yCAAA,MAAA,EAAA,sCAAA,MAAA,iDAAA,KAAA,iDAAA,MAAA,+BAAA,EAAA,IAAA,0CAAA,EAAA,0CAAA,EAAA,IAAA,kCAAA,EAAA,yCAAA,QAAA,+CAAA,QAAA,wCAAA,MAAA,EAAA,WAAA,+CAAA,OAAA,wCAAA,KAAA,4CAAA,QAAA,0CAAA,IAAA,oCAAA,KAAA,wDAAA,IAAA,wDAAA,IAAA,yCAAA,QAAA,gDAAA,QAAA,8DAAA,QAAA,wDAAA,QAAA,wDAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,iEAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,uEAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,4CAAA,QAAA,8CAAA,MAAA,EAAA,WAAA,qDAAA,QAAA,8CAAA,QAAA,kDAAA,QAAA,gDAAA,IAAA,qCAAA,KAAA,oCAAA,OAAA,+CAAA,YAAA,8DAAA,YAAA,0DAAA,QAAA,gEAAA,QAAA,yEAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,mEAAA,QAAA,6DAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,6DAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,iDAAA,QAAA,gEAAA,QAAA,2EAAA,QAAA,wEAAA,QAAA,iFAAA,QAAA,oCAAA,QAAA,iDAAA,QAAA,oDAAA,QAAA,oDAAA,QAAA,wDAAA,QAAA,6CAAA,QAAA,oDAAA,QAAA,mEAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,2CAAA,QAAA,0DAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,4DAAA,QAAA,8CAAA,QAAA,6DAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,wDAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,sDAAA,QAAA,gDAAA,QAAA,qCAAA,MAAA,EAAA,WAAA,qCAAA,KAAA,gDAAA,QAAA,kDAAA,IAAA,mDAAA,QAAA,qDAAA,IAAA,4CAAA,QAAA,8CAAA,IAAA,2CAAA,KAAA,iDAAA,KAAA,sDAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,4DAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,gDAAA,YAAA,8CAAA,YAAA,qBAAA,QAAA,qBAAA,IAAA,4CAAA,QAAA,sCAAA,QAAA,uCAAA,QAAA,gDAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,gDAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,kDAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,mCAAA,QAAA,0CAAA,QAAA,wCAAA,QAAA,kCAAA,MAAA,EAAA,WAAA,kCAAA,KAAA,oCAAA,IAAA,yCAAA,OAAA,sCAAA,QAAA,qCAAA,MAAA,EAAA,WAAA,4CAAA,OAAA,qCAAA,KAAA,yCAAA,QAAA,uCAAA,IAAA,+CAAA,KAAA,8CAAA,KAAA,iCAAA,KAAA,iDAAA,KAAA,0CAAA,aAAA,+CAAA,IAAA,KAAA,EAAA,OAAA,MAAA,EAAA,WAAA,iDAAA,IAAA,QAAA,EAAA,QAAA,MAAA,EAAA,WAAA,+CAAA,IAAA,KAAA,EAAA,OAAA,MAAA,EAAA,WAAA,iDAAA,IAAA,QAAA,EAAA,QAAA,MAAA,EAAA,WAAA,kBAAA,QAAA,0CAAA,QAAA,oCAAA,QAAA,wCAAA,QAAA,kCAAA,QAAA,2BAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,+BAAA,KAAA,0CAAA,KAAA,+BAAA,MAAA,uCAAA,YAAA,4CAAA,QAAA,2DAAA,QAAA,2DAAA,QAAA,uDAAA,QAAA,uDAAA,QAAA,+BAAA,QAAA,0BAAA,QAAA,8CAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,8CAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,uCAAA,QAAA,gDAAA,QAAA,sDAAA,QAAA,mDAAA,QAAA,4CAAA,QAAA,wDAAA,QAAA,mCAAA,MAAA,EAAA,WAAA,sCAAA,MAAA,EAAA,WAAA,sCAAA,QAAA,wCAAA,IAAA,kDAAA,QAAA,qDAAA,QAAA,uDAAA,IAAA,6BAAA,KAAA,8CAAA,KAAA,8CAAA,KAAA,wDAAA,YAAA,wBAAA,QAAA,0CAAA,QAAA,oCAAA,QAAA,+BAAA,MAAA,EAAA,WAAA,sCAAA,QAAA,+BAAA,SAAA,mCAAA,KAAA,iCAAA,IAAA,+BAAA,KAAA,6BAAA,KAAA,uCAAA,QAAA,4BAAA,QAAA,2BAAA,MAAA,EAAA,WAAA,2BAAA,KAAA,6BAAA,IAAA,4BAAA,IR89BJ,CStgCE,CAAA,kBAAA,CAAA,eAAA,CAAA,kBAAA,CAAA,eAAA,GAGE,KAAA,IAAA,QAAA,CAAA,KAAA,MAAA,CAAA,WACA,eAAA,ST1CJ,OS4CM,EAAA,EAAA,ITsgCN,CS5gCE,CAAA,mBAAA,CAAA,eAAA,CAAA,mBAAA,CAAA,eAAA,GAGE,KAAA,IAAA,QAAA,CAAA,QAAA,MAAA,CAAA,WACA,eAAA,KT1CJ,OS4CM,EAAA,EAAA,IT4gCN,CSlhCE,CAAA,kBAAA,CAAA,eAAA,CAAA,kBAAA,CAAA,eAAA,GAGE,KAAA,IAAA,OAAA,CAAA,QAAA,MAAA,CAAA,WACA,eAAA,KT1CJ,OS4CM,EAAA,EAAA,ITkhCN,CSxhCE,CAAA,mBAAA,CAAA,eAAA,CAAA,mBAAA,CAAA,eAAA,GAGE,KAAA,IAAA,IAAA,CAAA,OAAA,MAAA,CAAA,WACA,eAAA,KT1CJ,OS4CM,EAAA,EAAA,ITwhCN,CS9hCE,CAAA,oBAAA,CAAA,eAAA,CAAA,oBAAA,CAAA,eAAA,GAGE,KAAA,IAAA,OAAA,CAAA,QAAA,MAAA,CAAA,WACA,eAAA,KT1CJ,OS4CM,EAAA,EAAA,IT8hCN,CSpiCE,CAAA,mBAAA,CAAA,eAAA,CAAA,mBAAA,CAAA,eAAA,GAGE,KAAA,IAAA,MAAA,CAAA,KAAA,MAAA,CAAA,WACA,eAAA,KT1CJ,OS4CM,EAAA,EAAA,IToiCN,CS1iCE,CAAA,gBAAA,CAAA,eAAA,CAAA,gBAGE,KAAA,IAAA,QAAA,CAAA,QAAA,MAAA,CAAA,WACA,eAAA,IT2iCJ,CS/iCE,CAAA,iBAAA,CAAA,eAAA,CAAA,iBAGE,KAAA,IAAA,IAAA,CAAA,OAAA,MAAA,CAAA,WACA,eAAA,OTgjCJ,CSpjCE,CAAA,gBAAA,CAAA,eAAA,CAAA,gBAGE,KAAA,IAAA,OAAA,CAAA,QAAA,MAAA,CAAA,WACA,eAAA,OTqjCJ,CSzjCE,CAAA,eAAA,CAAA,eAAA,CAAA,eAAA,CAAA,eAGE,KAAA,IAAA,IAAA,CAAA,OAAA,MAAA,CAAA,WACA,eAAA,OT0jCJ,CSr+BQ,CAzFN,eAyFM,EAAA,CAzFN,eAyFM,CAzFN,eAyFM,EAAA,CAzFN,eAyFM,ET/HR,OSgIU,EAAA,EAAA,KTw+BV,CSlkCE,CAAA,gBAAA,CAAA,eAAA,CAAA,gBAGE,KAAA,IAAA,OAAA,CAAA,QAAA,MAAA,CAAA,WACA,eAAA,OTmkCJ,CSvkCE,CAAA,eAAA,CAAA,eAAA,CAAA,eAGE,KAAA,IAAA,MAAA,CAAA,KAAA,MAAA,CAAA,WACA,eAAA,OTwkCJ,CS5kCE,CAAA,gBAAA,CAAA,eAAA,CAAA,gBAGE,KAAA,IAAA,OAAA,CAAA,QAAA,MAAA,CAAA,WACA,eAAA,OT6kCJ,CSjlCE,CAAA,iBAAA,CAAA,eAAA,CAAA,iBAGE,KAAA,IAAA,MAAA,CAAA,KAAA,MAAA,CAAA,WACA,eAAA,OTklCJ,CStlCE,CAAA,gBAAA,CAAA,eAAA,CAAA,gBAGE,KAAA,IAAA,OAAA,CAAA,KAAA,MAAA,CAAA,WACA,eAAA,OTulCJ,CAhlCA,OAAA,CAAA,oBAAA,EAAA,MACE,KQ4BE,4BAAA,QAAA,sBAAA,QAAA,oBAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,8CAAA,QAAA,+BAAA,QAAA,sCAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,sCAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,yCAAA,QAAA,gDAAA,QAAA,qDAAA,QAAA,kDAAA,QAAA,8DAAA,QAAA,2DAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,yDAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,wDAAA,QAAA,iEAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,qCAAA,QAAA,yCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,QAAA,mCAAA,QAAA,yCAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,gCAAA,QAAA,8CAAA,QAAA,mCAAA,QAAA,qCAAA,QAAA,2CAAA,QAAA,qCAAA,QAAA,sDAAA,QAAA,gDAAA,QAAA,yCAAA,QAAA,kDAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,0CAAA,QAAA,gDAAA,QAAA,mDAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,0CAAA,QAAA,mDAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,sDAAA,QAAA,sDAAA,QAAA,sDAAA,QAAA,gDAAA,QAAA,gDAAA,QAAA,yDAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,sDAAA,QAAA,sDAAA,QAAA,4DAAA,QAAA,4DAAA,QAAA,uCAAA,QAAA,+CAAA,QAAA,kDAAA,QAAA,4CAAA,QAAA,kDAAA,QAAA,qDAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,4CAAA,QAAA,qDAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,wDAAA,QAAA,wDAAA,QAAA,kDAAA,QAAA,wDAAA,QAAA,yCAAA,QAAA,kDAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,+CAAA,QAAA,qDAAA,QAAA,qDAAA,QAAA,+CAAA,QAAA,2CAAA,QAAA,wDAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,oCAAA,QAAA,mCAAA,QAAA,2CAAA,QAAA,oDAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,qCAAA,QAAA,8CAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,sCAAA,QAAA,+CAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,kDAAA,QAAA,kDAAA,QAAA,4CAAA,QAAA,6CAAA,QAAA,8CAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,4CAAA,IAAA,qCAAA,QAAA,yCAAA,QAAA,0CAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,qCAAA,QAAA,kCAAA,QAAA,mCAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,kCAAA,QAAA,kCAAA,QAAA,qCAAA,QAAA,yCAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,KAAA,8BAAA,QAAA,4BAAA,QAAA,oCAAA,QAAA,0BAAA,QAAA,mCAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,gCAAA,QAAA,sCAAA,IAAA,+CAAA,IAAA,sCAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,8CAAA,QAAA,mDAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,oCAAA,QAAA,oCAAA,QAAA,6CAAA,QAAA,sCAAA,IAAA,6CAAA,QAAA,+CAAA,IAAA,6BAAA,QAAA,sCAAA,QAAA,iCAAA,QAAA,0CAAA,QAAA,0CAAA,QAAA,4DAAA,QAAA,mDAAA,QAAA,8CAAA,QAAA,uDAAA,QAAA,sDAAA,IAAA,sDAAA,IAAA,kDAAA,QAAA,yCAAA,QAAA,iDAAA,IAAA,iDAAA,IAAA,mDAAA,IAAA,mDAAA,IAAA,mDAAA,IAAA,qDAAA,IAAA,+CAAA,QAAA,oCAAA,QAAA,+CAAA,QAAA,iDAAA,QAAA,0CAAA,QAAA,0CAAA,QAAA,4CAAA,QAAA,yCAAA,QAAA,yCAAA,QAAA,2CAAA,QAAA,mCAAA,QAAA,6CAAA,QAAA,2CAAA,QAAA,4CAAA,QAAA,+CAAA,QAAA,6CAAA,QAAA,8CAAA,QAAA,kCAAA,QAAA,4CAAA,QAAA,iDAAA,QAAA,2CAAA,QAAA,sCAAA,QAAA,4CAAA,QAAA,iDAAA,QAAA,2CAAA,QAAA,oCAAA,QAAA,8CAAA,QAAA,mDAAA,QAAA,6CAAA,QAAA,qCAAA,QAAA,kCAAA,QAAA,sDAAA,QAAA,0CAAA,QAAA,4CAAA,QAAA,yCAAA,QAAA,mCAAA,QAAA,2CAAA,QAAA,uCAAA,QAAA,uCAAA,QAAA,iCAAA,QAAA,yCAAA,QAAA,0BAAA,QAAA,kCAAA,QAAA,kCAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,2BAAA,QAAA,iCAAA,QAAA,iCAAA,QAAA,iCAAA,QAAA,mCAAA,QAAA,uDAAA,QAAA,qDAAA,QAAA,0CAAA,QAAA,oCAAA,QAAA,4CAAA,QAAA,oCAAA,QAAA,qCAAA,QAAA,gDAAA,QAAA,uDAAA,QAAA,+BAAA,EAAA,kCAAA,QAAA,2BAAA,QAAA,sCAAA,KAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,sCAAA,KAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,kCAAA,QAAA,4BAAA,QAAA,yCAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,yCAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,4BAAA,QAAA,0BAAA,QAAA,sCAAA,YAAA,2CAAA,QAAA,iDAAA,QAAA,mDAAA,IAAA,uCAAA,QAAA,4CAAA,QAAA,yCAAA,QAAA,qDAAA,QAAA,0CAAA,QAAA,mDAAA,QAAA,gDAAA,QAAA,kDAAA,QAAA,mDAAA,QAAA,6CAAA,QAAA,6CAAA,QAAA,8CAAA,QAAA,gDAAA,IAAA,8CAAA,QAAA,gDAAA,IAAA,mCAAA,QAAA,sCAAA,QAAA,4CAAA,QAAA,oCAAA,QAAA,qCAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,4CAAA,QAAA,gCAAA,QAAA,wCAAA,QAAA,4CAAA,QAAA,0CAAA,QAAA,sCAAA,QAAA,wCAAA,QAAA,kDAAA,QAAA,kDAAA,QAAA,gDAAA,QAAA,gDAAA,QAAA,+CAAA,QAAA,+CAAA,QAAA,kDAAA,QAAA,mDAAA,IAAA,mDAAA,IAAA,qDAAA,IAAA,qDAAA,IAAA,qDAAA,IAAA,uDAAA,IAAA,6CAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,+CAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,yCAAA,QAAA,0CAAA,QAAA,0CAAA,QAAA,oCAAA,QAAA,4CAAA,QAAA,4CAAA,QAAA,4CAAA,QAAA,sCAAA,QAAA,8CAAA,QAAA,iDAAA,QAAA,iDAAA,QAAA,mDAAA,QAAA,mDAAA,QAAA,mDAAA,QAAA,qDAAA,QAAA,mCAAA,QAAA,qCAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,oCAAA,QAAA,6CAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,wCAAA,QAAA,yCAAA,QAAA,iDAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,kDAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,mDAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,4DAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,yDAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,yDAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,2DAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,+CAAA,QAAA,qCAAA,QAAA,sCAAA,QAAA,8CAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,+CAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,8CAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,iDAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,wCAAA,QAAA,qCAAA,QAAA,qCAAA,QAAA,8CAAA,QAAA,gCAAA,KAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,6CAAA,IAAA,6CAAA,IAAA,+CAAA,IAAA,0CAAA,QAAA,mDAAA,QAAA,qCAAA,KAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,kDAAA,IAAA,kDAAA,IAAA,oDAAA,IAAA,uCAAA,QAAA,gDAAA,QAAA,kCAAA,KAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,+CAAA,IAAA,+CAAA,IAAA,iDAAA,IAAA,yCAAA,QAAA,kDAAA,QAAA,oCAAA,KAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,iDAAA,IAAA,iDAAA,IAAA,mDAAA,IAAA,8BAAA,QAAA,uCAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,qCAAA,QAAA,8CAAA,QAAA,gCAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,6CAAA,IAAA,6CAAA,IAAA,+CAAA,IAAA,+CAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qDAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qDAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,uDAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,2CAAA,QAAA,2BAAA,QAAA,sCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,4CAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,4CAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,8CAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,kCAAA,QAAA,iCAAA,QAAA,4CAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,kDAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,kDAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,oDAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,wCAAA,QAAA,4BAAA,QAAA,6BAAA,QAAA,wBAAA,KAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,qCAAA,IAAA,qCAAA,IAAA,uCAAA,IAAA,0CAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,2CAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,kCAAA,QAAA,mCAAA,QAAA,8BAAA,KAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,2CAAA,IAAA,2CAAA,IAAA,6CAAA,IAAA,gDAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,iDAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,gCAAA,QAAA,sCAAA,QAAA,8BAAA,QAAA,8BAAA,QAAA,mCAAA,QAAA,uCAAA,QAAA,oCAAA,QAAA,gDAAA,QAAA,8BAAA,QAAA,wBAAA,QAAA,6CAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,uCAAA,QAAA,yCAAA,QAAA,+CAAA,QAAA,wDAAA,IAAA,wDAAA,IAAA,yCAAA,QAAA,gDAAA,QAAA,8DAAA,QAAA,wDAAA,QAAA,wDAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,iEAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,uEAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,4CAAA,QAAA,0DAAA,QAAA,gEAAA,QAAA,yEAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,mEAAA,QAAA,6DAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,6DAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,iDAAA,QAAA,gEAAA,QAAA,2EAAA,QAAA,wEAAA,QAAA,iFAAA,QAAA,oCAAA,QAAA,iDAAA,QAAA,oDAAA,QAAA,oDAAA,QAAA,wDAAA,QAAA,6CAAA,QAAA,oDAAA,QAAA,mEAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,2CAAA,QAAA,0DAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,4DAAA,QAAA,8CAAA,QAAA,6DAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,wDAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,sDAAA,QAAA,gDAAA,QAAA,qBAAA,QAAA,4CAAA,QAAA,sCAAA,QAAA,uCAAA,QAAA,gDAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,gDAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,kDAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,mCAAA,QAAA,0CAAA,QAAA,wCAAA,QAAA,0CAAA,QAAA,oCAAA,QAAA,wCAAA,QAAA,kCAAA,QAAA,2BAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,4CAAA,QAAA,2DAAA,QAAA,2DAAA,QAAA,uDAAA,QAAA,uDAAA,QAAA,+BAAA,QAAA,0BAAA,QAAA,8CAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,8CAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,uCAAA,QAAA,gDAAA,QAAA,sDAAA,QAAA,mDAAA,QAAA,4CAAA,QAAA,wDAAA,QAAA,wBAAA,QAAA,0CAAA,QAAA,oCAAA,QAAA,uCAAA,QAAA,4BAAA,ORu+CF,CACF","names":[],"sourceRoot":"webpack:///","file":"styles.ba8d080e28dc5cf4.css","x_google_ignoreList":[1,2,3,4,5,6,7,8,9]}